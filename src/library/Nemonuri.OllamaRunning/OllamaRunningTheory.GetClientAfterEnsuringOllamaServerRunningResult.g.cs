// <auto-generated />
#nullable enable // For CS8669

using Nemonuri.Failures;
using SumSharp;


namespace Nemonuri.OllamaRunning;

public static partial class OllamaRunningTheory
{
    public partial class GetClientAfterEnsuringOllamaServerRunningResult :
        IValueOrFailure<(OllamaSharp.OllamaApiClient, OllamaLocalServerProcess?), GetClientAfterEnsuringOllamaServerRunningResult.FailInfo>
    {
        [UnionCase(nameof(FailCode.Canceled))]
        [UnionCase(nameof(FailCode.GetOllamaServerVersionFailed), typeof(GetOllamaServerVersionResult.FailInfo))]
        [UnionCase(nameof(FailCode.GetLocalOllamaServerRunningStateFailed), typeof(GetLocalOllamaServerRunningStateResult.FailInfo))]
        [UnionCase(nameof(FailCode.LocalOllamaServerIsAlreadyRunning))]
        [UnionCase(nameof(FailCode.RunLocalOllamaServerFailed), typeof(OllamaRunningTheory.RunLocalOllamaServerResult.FailInfo))]
        [UnionCase(nameof(FailCode.GetOllamaServerVersionAgainFailed), typeof(GetOllamaServerVersionResult.FailInfo))]
        public partial class FailInfo
        {
            public FailCode FailCode => (FailCode)(Index + 1);
        }

        public enum FailCode
        {
            Unknown = 0,
            Canceled = 1,
            GetOllamaServerVersionFailed = 2,
            GetLocalOllamaServerRunningStateFailed = 3,
            LocalOllamaServerIsAlreadyRunning = 4,
            RunLocalOllamaServerFailed = 5,
            GetOllamaServerVersionAgainFailed = 6
        }

        private readonly ValueOrFailure<(OllamaSharp.OllamaApiClient, OllamaLocalServerProcess?), FailInfo> _internalSource;

        public GetClientAfterEnsuringOllamaServerRunningResult(ValueOrFailure<(OllamaSharp.OllamaApiClient, OllamaLocalServerProcess?), FailInfo> internalSource)
        {
            _internalSource = internalSource;
        }

        public static GetClientAfterEnsuringOllamaServerRunningResult CreateAsValue((OllamaSharp.OllamaApiClient, OllamaLocalServerProcess?) value) =>
            new(value);
        
        public static GetClientAfterEnsuringOllamaServerRunningResult CreateAsFailure(FailInfo failInfo, string message = "") =>
            new(FailureTheory.Create(failInfo, message));
        
        public static GetClientAfterEnsuringOllamaServerRunningResult CreateAsGetOllamaServerVersionFailed
        (GetOllamaServerVersionResult.FailInfo value, string message = "") =>
            new(FailureTheory.Create(FailInfo.GetOllamaServerVersionFailed(value), message));

        public static GetClientAfterEnsuringOllamaServerRunningResult CreateAsGetLocalOllamaServerRunningStateFailed
        (GetLocalOllamaServerRunningStateResult.FailInfo value, string message = "") =>
            new(FailureTheory.Create(FailInfo.GetLocalOllamaServerRunningStateFailed(value), message));

        public static GetClientAfterEnsuringOllamaServerRunningResult CreateAsRunLocalOllamaServerFailed
        (OllamaRunningTheory.RunLocalOllamaServerResult.FailInfo value, string message = "") =>
            new(FailureTheory.Create(FailInfo.RunLocalOllamaServerFailed(value), message));

        public static GetClientAfterEnsuringOllamaServerRunningResult CreateAsGetOllamaServerVersionAgainFailed
        (GetOllamaServerVersionResult.FailInfo value, string message = "") =>
            new(FailureTheory.Create(FailInfo.GetOllamaServerVersionAgainFailed(value), message));


        public bool IsValue => _internalSource.IsValue;

        public bool IsFailure => _internalSource.IsFailure;

        public (OllamaSharp.OllamaApiClient, OllamaLocalServerProcess?) GetValue() => _internalSource.GetValue();

        public Failure<FailInfo> GetFailure() => _internalSource.GetFailure();

    }
}