// <auto-generated />
#nullable enable // For CS8669

using Nemonuri.Failures;
using SumSharp;
using System.Diagnostics;

namespace Nemonuri.OllamaRunning;

public static partial class OllamaRunningTheory
{
    public partial class RunLocalOllamaServerResult :
        IValueOrFailure<OllamaLocalServerProcess, RunLocalOllamaServerResult.FailInfo>
    {
        [UnionCase(nameof(FailCode.Canceled))]
        [UnionCase(nameof(FailCode.ProcessStartFailed), typeof(ProcessStartingTheory.StartOrFailResult.FailInfo))]
        [UnionCase(nameof(FailCode.TimeOut))]
        [UnionCase(nameof(FailCode.ErrorReceivedFromLocalServer))]
        public partial class FailInfo
        {
            public FailCode FailCode => (FailCode)(Index + 1);
        }

        public enum FailCode
        {
            Unknown = 0,
            Canceled = 1,
            ProcessStartFailed = 2,
            TimeOut = 3,
            ErrorReceivedFromLocalServer = 4
        }

        private readonly ValueOrFailure<OllamaLocalServerProcess, FailInfo> _internalSource;

        public RunLocalOllamaServerResult(ValueOrFailure<OllamaLocalServerProcess, FailInfo> internalSource)
        {
            _internalSource = internalSource;
        }

        public static RunLocalOllamaServerResult CreateAsValue(OllamaLocalServerProcess value) =>
            new(value);
        
        public static RunLocalOllamaServerResult CreateAsFailure(FailInfo failInfo, string message = "") =>
            new(FailureTheory.Create(failInfo, message));
        
        public static RunLocalOllamaServerResult CreateAsProcessStartFailed
        (ProcessStartingTheory.StartOrFailResult.FailInfo value, string message = "") =>
            new(FailureTheory.Create(FailInfo.ProcessStartFailed(value), message));


        public bool IsValue => _internalSource.IsValue;

        public bool IsFailure => _internalSource.IsFailure;

        public OllamaLocalServerProcess GetValue() => _internalSource.GetValue();

        public Failure<FailInfo> GetFailure() => _internalSource.GetFailure();

    }
}